Data Structure To Store The ToDo list --
    [
      {
        value: 'travel',
        id: 'title1',
        hasDone: false,
        tasks: [
                { id: 'item1', value: 'buy clothes', hasDone: false },
                { id: 'item2', value: 'withdraw cash', hasDone: false }
               ]
      },
      {
        title: 'study',
        id: 'title2',
        hasDone: false,
        tasks: [
                 { id: 'item1', value: 'read books', hasDone: false },
                 { id: 'item2', value: 'solve mathematics', hasDone: false }
                ]
      }
    ]


version[1]

--DONE-- * Add dev dependencies
--DONE-- * Add a page which shows the TODO list with title
--DONE-- * Show all the title which are in the data while refreshing the page
--DONE-- * Add id the the title
--DONE-- * Add delete icon to header of card
--DONE-- * Add title id to the card
--DONE-- * Add delete option to the title
--DONE-- * Add todo form
--DONE-- * Change the data structure of the database 
--DONE-- * Add tasks to the titles
--DONE-- * Make deleteTaskIcon operational of todo card
--DONE-- * Make ToDoList class
--DONE-- * Make ToDo class
--DONE-- * Make checkBox operational of todo card
--DONE-- * Add new task inside to a todo
--DONE-- * Render the added task to the toDo card
--DONE-- * Remove the value of inputTask inside card footer after each submission
* Remove the inner text of the toDo form after each submission

--------------------------------------AFTER PAIRING----------------------------------
--DONE-- * Extract ToDoList and Task classes in different files
--DONE-- * Change name from ToDoList to ToDoListCollection class
--DONE-- * Add addToDoList method to ToDoListCollection
--DONE-- * Add load method to ToDoList and Task classes
--DONE-- * Modify load method of ToDoListCollection
--DONE-- * Add lastToDoList getter in ToDoListCollection

--DONE-- * Refactor handlers name
--DONE-- * Add Content-Type in response for all handlers
--DONE-- * Modify Delete

* Add indicating mechanism for adding/deleting methods of classes
* Refactor frontend code with page design
* Add search feature (at frontend)
* Add checking mechanism whether desired request body is coming or not
--DONE-- * Change to express

* Add save method in ToDoListCollection
* Change writeDataFile function to toDoListCollectionWriter
  which takes the data and write it to the data file